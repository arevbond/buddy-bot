services:
  tg-bot:
    container_name: "tg-bot-production"
    image: blessyo7/tg-buddy-bot:latest
    depends_on:
      migrate:
        condition: service_completed_successfully
    # БЫЛО:
    #    volumes:
    #      - ./bot.log:/bot.log
# FIX: пределать на
        #volumes:
        #  - ./logs:/app/logs
    env_file:
      - .env
    restart: unless-stopped

  db:
    container_name: "tg-bot-db"
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5430:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 3

  migrate:
    image: golang:1.23
    volumes:
      - ./migrations/postgres:/migrations
    working_dir: /migrations
    command: >
      sh -c "go install github.com/pressly/goose/v3/cmd/goose@latest &&
          goose postgres ${DATABASE_URL} up &&
          goose postgres ${DATABASE_URL} status | grep -q 'migrations applied' ||
          echo 'No migrations applied'"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

volumes:
  postgres_data:
